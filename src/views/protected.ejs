<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" type="text/css" href="/protected.css" />

    <body onload="loadData();">
      <div id="sidebar">
        <div id="welcomeMsg">
          <h1>Dashboard</h1>
          <h2>Welcome, <%=message.username %></h2>
          <button onclick="event.preventDefault(); logOut();" id="logout">
            Log Out
          </button>
        </div>
        <div id="actions">
          <button
            type="button"
            data-bs-toggle="modal"
            data-bs-target="#addProdModal"
          >
            Add Product to Database
          </button>
        </div>
      </div>
      <table class="table table-borderless table-striped">
        <thead>
          <tr id="trHead1">
            <th>Product Name</th>
            <th>Product Inventory</th>
          </tr>
        </thead>
        <tbody id="myTable"></tbody>
      </table>
      <!--Modal for adding products-->
      <!-- Modal -->
      <div
        class="modal fade"
        id="addProdModal"
        tabindex="-1"
        role="dialog"
        aria-labelledby="addProdModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="addProdModalLabel">Modal title</h5>
              <button
                type="button"
                class="close"
                data-bs-dismiss="modal"
                aria-label="Close"
              >
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <!--Form for create form-->
              <form id="addprod-form">
                <label for="prodName">Product Name:</label>
                <input type="text" id="prodName" required />
                <label for="prodNumbers">Number Available:</label>
                <input type="number" id="prodNumbers" required />
                <button type="submit" id="add-prod-btn" class="btn btn-primary">
                  Save changes
                </button>
              </form>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                Close
              </button>
            </div>
          </div>
        </div>
      </div>
      <div id="toast-box"></div>
      <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"
      ></script>
      <script>
        // load table on load
        async function loadData() {
          var token = "";
          if (window.localStorage.getItem("token")) {
            token = window.localStorage.getItem("token");
          } else if (document.cookie.token) {
            token = document.cookie.token;
          }
          const response = await fetch("/crud/product/findAll", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: `${token}`,
            },
          });
          const data = await response.json();
          buildTable(data);
        }
        // Logout
        document
          .getElementById("logout")
          .addEventListener("click", async function (event) {
            event.preventDefault();
            const response = await fetch("/logout", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
            });
            if (response.ok) {
              window.location.href = "/";
            }
          });
        // build table
        async function buildTable(data) {
          var table = document.getElementById("myTable");
          table.innerHTML = "";
          for (var i = 0; i < data.length; i++) {
            var row = `<tr>
                                <td>${data[i].name}</td>
                                <td>${data[i].number}</td>
                        </tr>`;
            table.innerHTML += row;
          }
        }
        document
          .getElementById("addprod-form")
          .addEventListener("submit", async function (event) {
            event.preventDefault();
            const data = {
              name: document.getElementById("prodName").value,
              number: document.getElementById("prodNumbers").value,
            };
            try {
              const response = await fetch("/crud/product/addDoc", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
              });
              if (!response.ok) {
                throw new Error("Failed to add Product");
              }
              const result = await response.json();
              loadData();
              if (result.error) {
                throw new Error(result.error);
              }
            } catch (error) {
              //showToast(error)
              const errorToast = new bootstrap.Toast(
                document.getElementById("toast-box")
              );
              errorToast.show();
            }
          });
        let toastbox = document.getElementById("toast-box");

        function showToast(msg) {
          let toast = document.createElement("div");
          toast.classList.add("toast");
          toast.innerHTML = msg;
          toastbox.appendChild(toast);
          setTimeout(() => {
            toast.remove();
          }, 5000);
        }
      </script>
    </body>
  </head>
</html>
